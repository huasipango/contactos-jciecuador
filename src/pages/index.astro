---
import Layout from '../layouts/Layout.astro';
import UsersTable from '../components/UsersTable.astro';
import { getUsers, getOrganizationalUnits, getAuthUrl } from '../utils/googleAdmin';

// Asegura que la página se renderiza en el servidor
export const prerender = false;

const accessToken = Astro.cookies.get('access_token')?.value;

let users = [];
let orgUnits = [];
let apiError = null;
const authError = Astro.url.searchParams.get('error');
const authSuccess = Astro.url.searchParams.get('auth') === 'success';

if (!accessToken) {
  const authUrl = await getAuthUrl();
  return Astro.redirect(authUrl);
}

try {
  users = await getUsers(accessToken);
  orgUnits = await getOrganizationalUnits(accessToken);
} catch (e) {
  if (e.message?.includes('invalid_token') || e.message?.includes('Invalid Credentials')) {
    Astro.cookies.delete('access_token');
    const authUrl = await getAuthUrl();
    return Astro.redirect(authUrl);
  }
  apiError = e.message;
}
---

<Layout title="Directorio de Contactos">
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold text-center mb-8 dark:text-white">
      Directorio de Contactos JCI Ecuador
    </h1>
    
    {authError && (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4">
        <strong class="font-bold">Error: </strong>
        <span class="block sm:inline">
          {authError === 'auth' && 'Error en la autenticación'}
          {authError === 'token' && 'Error obteniendo el token de acceso'}
          {authError === 'unknown' && 'Error desconocido'}
        </span>
      </div>
    )}
    
    {authSuccess && (
      <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4">
        <span class="block sm:inline">Autenticación exitosa</span>
      </div>
    )}
    
    {apiError ? (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
        <strong class="font-bold">Error:</strong>
        <span class="block sm:inline">{apiError}</span>
      </div>
    ) : (
      <UsersTable users={users} orgUnits={orgUnits} />
    )}
  </main>
</Layout> 