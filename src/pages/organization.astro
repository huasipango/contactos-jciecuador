---
import Layout from '../layouts/Layout.astro';
import { listAllOrganizationUnits, getAuthUrl } from '../utils/googleAdmin';

export const prerender = false;

const accessToken = Astro.cookies.get('access_token')?.value;
let orgUnitsData: any = null;
let error = null;
let isAdmin = false;

if (!accessToken) {
  const authUrl = await getAuthUrl();
  return Astro.redirect(authUrl);
}

try {
  orgUnitsData = await listAllOrganizationUnits(accessToken);
  isAdmin = true;
} catch (e: any) {
  if (e.message?.includes('invalid_token') || e.message?.includes('Invalid Credentials')) {
    Astro.cookies.delete('access_token');
    const authUrl = await getAuthUrl();
    return Astro.redirect(authUrl);
  }
  error = e.message;
}
---

<Layout title="Unidades Organizativas">
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold text-center mb-8 dark:text-white">
      Listado de Unidades Organizativas
    </h1>

    {!isAdmin ? (
      <div class="bg-yellow-100 border border-yellow-400 text-yellow-800 px-4 py-3 rounded relative mb-4">
        <strong class="font-bold">Acceso Restringido:</strong>
        <span class="block sm:inline ml-2">
          Esta página solo está disponible para administradores del directorio. Si necesitas acceso, contacta al administrador del sistema.
        </span>
      </div>
    ) : error ? (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
        <strong class="font-bold">Error:</strong>
        <span class="block sm:inline">{error}</span>
      </div>
    ) : (
      <div class="space-y-6">
        {/* Vista en árbol de unidades organizativas */}
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
          <h2 class="text-xl font-semibold dark:text-white mb-4">
            Estructura Organizativa
          </h2>
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
              <thead class="bg-gray-50 dark:bg-gray-800">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400">
                    Nombre
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400">
                    Ruta
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider dark:text-gray-400">
                    Descripción
                  </th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200 dark:bg-gray-900 dark:divide-gray-700">
                {orgUnitsData?.organizationUnits?.map((unit: any) => (
                  <tr
                    class="hover:bg-gray-50 dark:hover:bg-gray-800 cursor-pointer"
                    onclick={`window.location.href='/organization/${unit.orgUnitId}'`}
                  >
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-gray-100">
                      {unit.name}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                      {unit.orgUnitPath}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400">
                      {unit.description || '-'}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* JSON completo */}
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
          <div class="mb-4 flex justify-between items-center">
            <h2 class="text-xl font-semibold dark:text-white">
              Respuesta Completa del API
            </h2>
            <button
              id="copyButton"
              class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-md transition-colors"
            >
              Copiar JSON
            </button>
          </div>
          <pre
            class="bg-gray-100 dark:bg-gray-900 p-4 rounded-lg overflow-x-auto text-sm dark:text-gray-300"
          >{JSON.stringify(orgUnitsData, null, 2)}</pre>
        </div>
      </div>
    )}

    <div class="mt-8 text-center">
      <a
        href="/"
        class="inline-block bg-gray-500 hover:bg-gray-600 text-white px-6 py-2 rounded-lg transition-colors"
      >
        Volver al Directorio
      </a>
    </div>
  </main>
</Layout>

<script>
  const copyButton = document.getElementById('copyButton');
  const preElement = document.querySelector('pre');

  copyButton?.addEventListener('click', async () => {
    if (preElement) {
      try {
        await navigator.clipboard.writeText(preElement.textContent || '');
        const originalText = copyButton.textContent;
        copyButton.textContent = '¡Copiado!';
        copyButton.classList.remove('bg-blue-500', 'hover:bg-blue-600');
        copyButton.classList.add('bg-green-500', 'hover:bg-green-600');
        
        setTimeout(() => {
          copyButton.textContent = originalText;
          copyButton.classList.remove('bg-green-500', 'hover:bg-green-600');
          copyButton.classList.add('bg-blue-500', 'hover:bg-blue-600');
        }, 2000);
      } catch (err) {
        console.error('Error al copiar:', err);
      }
    }
  });
</script> 